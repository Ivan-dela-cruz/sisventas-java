/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ventas;

import alertas.principal.AWTUtilities;
import alertas.principal.ErrorAlert;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import static paneles.PnlVentas.lblvaTotal2;
import static paneles.PnlVentas.tablaVentas;
import tabla.EstiloTablaHeader;
import tabla.EstiloTablaRenderer;
import tabla.MyScrollbarUI;

/**
 *
 * @author Rojeru San
 */
public class Productos extends javax.swing.JDialog {

    /**
     * Creates new form Principal
     */
    public Productos(JFrame parent, boolean modal) {
        super(parent, modal);
        initComponents();

        jScrollPane1.getViewport().setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane1.getViewport().setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane1.getVerticalScrollBar().setUI(new MyScrollbarUI());
        jScrollPane1.getHorizontalScrollBar().setUI(new MyScrollbarUI());
        this.setLocation(5, 10);
        AWTUtilities.setOpaque(this, false);

        this.cantidadAlmacen.setVisible(false);

        Opciones.listar("");
        this.buscar.requestFocusInWindow();
        //producto.Opciones.iniciarTransaccion();

//        this.tabla.addKeyListener(new KeyAdapter() {
//            @Override
//            public void keyTyped(KeyEvent e) {
//                
//                if (e.getKeyCode()==KeyEvent.VK_ENTER) {
//                    JOptionPane.showMessageDialog(null, "HOLA");
//                    
//                }
//            }
//        });

        this.tabla.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent lse) {

                if (tabla.getSelectedRow() != -1) {
                    int fila = tabla.getSelectedRow();
                    cantidadAlmacen.setText(tabla.getValueAt(fila, 5).toString());

                }
            }
        });
    }

    private void seleccionaFila(String id) {
        for (int i = 0; i < this.tabla.getRowCount(); i++) {
            if (id.equals(this.tabla.getValueAt(i, 0).toString())) {
                this.tabla.setRowSelectionInterval(i, i);
                break;
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        cerrar = new principal.MaterialButton();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();
        buscar = new app.bolivia.swing.JCTextField();
        txtCantidad = new app.bolivia.swing.JCTextField();
        cantidadAlmacen = new javax.swing.JLabel();
        btnMenos = new principal.MaterialButtonCircle();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(80, 80, 97));

        cerrar.setBackground(new java.awt.Color(255, 255, 255));
        cerrar.setForeground(new java.awt.Color(102, 102, 102));
        cerrar.setText("X");
        cerrar.setToolTipText("<html> <head> <style> #contenedor{background:white;color:black; padding-left:10px;padding-right:10px;margin:0; padding-top:5px;padding-bottom:5px;} </style> </head> <body> <h4 id=\"contenedor\">Cerrar</h4> </body> </html>");
        cerrar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cerrar.setFont(new java.awt.Font("Roboto Medium", 1, 20)); // NOI18N
        cerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cerrarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(866, Short.MAX_VALUE)
                .addComponent(cerrar, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cerrar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(-5, -5, 930, 50));

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        tabla.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        tabla.setForeground(new java.awt.Color(51, 51, 51));
        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "COD", "NOMBRE", "COD BARRAS", "TIPO PRODUCTO", "$PRECIO", "STOCK"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabla.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        tabla.setDoubleBuffered(true);
        tabla.setRowHeight(20);
        tabla.setSelectionBackground(new java.awt.Color(0, 153, 255));
        tabla.getTableHeader().setReorderingAllowed(false);
        tabla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaMouseClicked(evt);
            }
        });
        tabla.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tablaKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(tabla);
        if (tabla.getColumnModel().getColumnCount() > 0) {
            tabla.getColumnModel().getColumn(0).setMaxWidth(70);
            tabla.getColumnModel().getColumn(2).setResizable(false);
            tabla.getColumnModel().getColumn(3).setResizable(false);
            tabla.getColumnModel().getColumn(4).setResizable(false);
            tabla.getColumnModel().getColumn(5).setMinWidth(100);
            tabla.getColumnModel().getColumn(5).setMaxWidth(100);
        }

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 896, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE)
        );

        jPanel1.add(jPanel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, 900, 150));

        buscar.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        buscar.setForeground(new java.awt.Color(51, 51, 51));
        buscar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        buscar.setPlaceholder("BUSCAR");
        buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarActionPerformed(evt);
            }
        });
        buscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                buscarKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                buscarKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                buscarKeyTyped(evt);
            }
        });
        jPanel1.add(buscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 60, 190, 30));

        txtCantidad.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        txtCantidad.setForeground(new java.awt.Color(51, 51, 51));
        txtCantidad.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtCantidad.setPlaceholder("CANTIDAD");
        txtCantidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCantidadActionPerformed(evt);
            }
        });
        txtCantidad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCantidadKeyTyped(evt);
            }
        });
        jPanel1.add(txtCantidad, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 60, 110, 30));

        cantidadAlmacen.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        cantidadAlmacen.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cantidadAlmacen.setText("CANTIDAD");
        jPanel1.add(cantidadAlmacen, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 60, -1, 29));

        btnMenos.setBackground(new java.awt.Color(0, 204, 153));
        btnMenos.setForeground(new java.awt.Color(255, 255, 255));
        btnMenos.setText("+");
        btnMenos.setToolTipText("<html> <head> <style> #contenedor{background:#3A9FAB;color:white; padding-left:10px;padding-right:10px;margin:0; padding-top:5px;padding-bottom:5px;} </style> </head> <body> <h4 id=\"contenedor\">Añadir</h4> </body> </html>");
        btnMenos.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnMenos.setFont(new java.awt.Font("Roboto Medium", 1, 24)); // NOI18N
        btnMenos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMenosActionPerformed(evt);
            }
        });
        jPanel1.add(btnMenos, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 50, 50, 50));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 920, 280));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cerrarActionPerformed
//        FadeEffect.fadeOut(this, 50, 0.1f);
        this.dispose();
    }//GEN-LAST:event_cerrarActionPerformed

    private void buscarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_buscarKeyReleased
        Opciones.listar(this.buscar.getText());


    }//GEN-LAST:event_buscarKeyReleased

    private void buscarKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_buscarKeyTyped
        char letras = evt.getKeyChar();

        if (Character.isLowerCase(letras)) {
            String cad = ("" + letras).toUpperCase();
            letras = cad.charAt(0);
            evt.setKeyChar(letras);
        }
    }//GEN-LAST:event_buscarKeyTyped

    private void btnMenosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMenosActionPerformed

        if (this.tabla.getRowCount() < 1) {
            ErrorAlert er = new ErrorAlert(new JFrame(), true);
            er.titulo.setText("OOPS...");
            er.msj.setText("LA TABLA ESTA VACÍA");
            er.msj1.setText("");
            er.setVisible(true);
        } else {
            if (this.tabla.getSelectedRowCount() < 1) {
                ErrorAlert er = new ErrorAlert(new JFrame(), true);
                er.titulo.setText("OOPS...");
                er.msj.setText("SELECCIONA UN");
                er.msj1.setText("REGISTRO");
                er.setVisible(true);
            } else {
                if (this.txtCantidad.getText().equals("")) {
                    ErrorAlert er = new ErrorAlert(new JFrame(), true);
                    er.titulo.setText("OOPS...");
                    er.msj.setText("DEBES INGRESAR UNA");
                    er.msj1.setText("CANTIDAD");
                    er.setVisible(true);
                } else {
                    int fila = this.tabla.getSelectedRow();

                    if (this.tabla.getValueAt(fila, 5).toString().equals("")) {

                        ventas.Opciones.enviar(Integer.parseInt(this.tabla.getValueAt(fila, 0).toString()), Integer.parseInt(this.txtCantidad.getText()));
                        this.txtCantidad.setText("");
                        this.dispose();
                    } else {

                        int alma = Integer.parseInt(this.cantidadAlmacen.getText());
                        int ingre = Integer.parseInt(this.txtCantidad.getText());
//                        int total = Integer.parseInt(this.cantidadAlmacen.getText()) - Integer.parseInt(this.txtCantidad.getText());
                        int total = alma - ingre;

                        if (total < 0) {
                            ErrorAlert er = new ErrorAlert(new JFrame(), true);
                            er.titulo.setText("OOPS...");
                            er.msj.setText("VERIFICA EL ALMACEN");
                            er.msj1.setText("");
                            er.setVisible(true);
                        } else {
                            crearDetalle();
                            this.txtCantidad.setText("");
                            this.buscar.setText("");
                            Opciones.listar(this.buscar.getText());
                            this.buscar.requestFocusInWindow();
//                            producto.Sentencias s = new producto.Sentencias();
//                            int fila1 = this.tabla.getSelectedRow();
//                            s.setCantidad(total);
//                            s.setId(Integer.parseInt(this.tabla.getValueAt(fila1, 0).toString()));
//
//                            int opcion = producto.Opciones.actualizarStock(s);
//                            if (opcion != 0) {
//                                String fila2 = this.tabla.getValueAt(fila1, 0).toString();
//                                Opciones.listar("");
//                                seleccionaFila(fila2);
//                                ventas.Opciones.enviar(Integer.parseInt(this.tabla.getValueAt(fila, 0).toString()), Integer.parseInt(this.txtCantidad.getText()));
//                                this.txtCantidad.setText("");
//                                //this.dispose();
//                            }
                        }
                    }
                }
            }
        }
    }//GEN-LAST:event_btnMenosActionPerformed

    public void crearDetalle() {
        try {

            DefaultTableModel tabladet = (DefaultTableModel) tablaVentas.getModel();
            String[] dato = new String[6];

            int fila = tabla.getSelectedRow();

            if (fila == -1) {
                JOptionPane.showMessageDialog(null, "No  ha seleccionado ningun registro");
            } else {
                String codproduc = tabla.getValueAt(fila, 0).toString();
                String nompro = tabla.getValueAt(fila, 1).toString();
                String codins = tabla.getValueAt(fila, 2).toString();
                String preins = tabla.getValueAt(fila, 4).toString();
                int c = 0;
                int j = 0;
                String cant = txtCantidad.getText();//JOptionPane.showInputDialog("ingrese cantidad");
                if ((cant.equals("")) || (cant.equals("0"))) {
                    JOptionPane.showMessageDialog(this, "Debe ingresar algun valor mayor que 0");
                } else {

                    int canting = Integer.parseInt(cant);
                    int comp = Integer.parseInt(Opciones.comparar(codproduc));
                    if (canting > comp) {
                        JOptionPane.showMessageDialog(this, "Ud. no cuenta con el stock apropiado");
                    } else {
                        for (int i = 0; i < tablaVentas.getRowCount(); i++) {
                            Object com = tablaVentas.getValueAt(i, 0);
                            if (codproduc.equals(com)) {
                                j = i;
                                tablaVentas.setValueAt(cant, i, 3);
                                c = c + 1;
                                Opciones.calcular();

                            }

                        }
                        if (c == 0) {

                            dato[0] = codproduc;
                            dato[1] = codins;
                            dato[2] = nompro;
                            dato[3] = cant;
                            dato[4] = preins;

                            tabladet.addRow(dato);

                            tablaVentas.setModel(tabladet);
                            Opciones.calcular();
                            //fac.calcular();

                        }
                    }
                    //  fac.calcular();
                }

            }

        } catch (Exception e) {
        }

    }


    private void txtCantidadKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCantidadKeyTyped
        char num = evt.getKeyChar();
        if ((num < '0' || num > '9')) {
            evt.consume();
        }
    }//GEN-LAST:event_txtCantidadKeyTyped

    private void tablaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaMouseClicked
        if (evt.getClickCount() == 2) {
            if (this.txtCantidad.getText().equals("")) {
                ErrorAlert er = new ErrorAlert(new JFrame(), true);
                er.titulo.setText("OOPS...");
                er.msj.setText("DEBES INGRESAR UNA");
                er.msj1.setText("CANTIDAD");
                er.setVisible(true);
            } else {
                int fila = this.tabla.getSelectedRow();

                if (this.tabla.getValueAt(fila, 5).toString().equals("")) {
                    ventas.Opciones.enviar(Integer.parseInt(this.tabla.getValueAt(fila, 0).toString()), Integer.parseInt(this.txtCantidad.getText()));
                    this.txtCantidad.setText("");
                    this.dispose();
                } else {

                    producto.Sentencias s = new producto.Sentencias();

                    int total = Integer.parseInt(this.cantidadAlmacen.getText()) - Integer.parseInt(this.txtCantidad.getText());

                    if (total < 0) {
                        ErrorAlert er = new ErrorAlert(new JFrame(), true);
                        er.titulo.setText("OOPS...");
                        er.msj.setText("VERIFICA EL ALMACEN");
                        er.msj1.setText("");
                        er.setVisible(true);
                    } else {
                        int fila1 = this.tabla.getSelectedRow();
                        s.setCantidad(total);
                        s.setId(Integer.parseInt(this.tabla.getValueAt(fila1, 0).toString()));

                        int opcion = producto.Opciones.actualizarStock(s);
                        if (opcion != 0) {
                            String fila2 = this.tabla.getValueAt(fila1, 0).toString();
                            Opciones.listar("");
                            seleccionaFila(fila2);
                            ventas.Opciones.enviar(Integer.parseInt(this.tabla.getValueAt(fila, 0).toString()), Integer.parseInt(this.txtCantidad.getText()));
                            this.txtCantidad.setText("");
                            this.dispose();
                        }
                    }
                }
            }
        }
    }//GEN-LAST:event_tablaMouseClicked

    private void txtCantidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCantidadActionPerformed
        if (this.tabla.getRowCount() < 1) {
            ErrorAlert er = new ErrorAlert(new JFrame(), true);
            er.titulo.setText("OOPS...");
            er.msj.setText("LA TABLA ESTA VACÍA");
            er.msj1.setText("");
            er.setVisible(true);
        } else {
            if (this.tabla.getSelectedRowCount() < 1) {
                ErrorAlert er = new ErrorAlert(new JFrame(), true);
                er.titulo.setText("OOPS...");
                er.msj.setText("SELECCIONA UN");
                er.msj1.setText("REGISTRO");
                er.setVisible(true);
            } else {
                if (this.txtCantidad.getText().equals("")) {
                    ErrorAlert er = new ErrorAlert(new JFrame(), true);
                    er.titulo.setText("OOPS...");
                    er.msj.setText("DEBES INGRESAR UNA");
                    er.msj1.setText("CANTIDAD");
                    er.setVisible(true);
                } else {
                    int fila = this.tabla.getSelectedRow();

                    if (this.tabla.getValueAt(fila, 5).toString().equals("")) {

                        ventas.Opciones.enviar(Integer.parseInt(this.tabla.getValueAt(fila, 0).toString()), Integer.parseInt(this.txtCantidad.getText()));
                        this.txtCantidad.setText("");
                        this.dispose();
                    } else {

                        int alma = Integer.parseInt(this.cantidadAlmacen.getText());
                        int ingre = Integer.parseInt(this.txtCantidad.getText());
//                        int total = Integer.parseInt(this.cantidadAlmacen.getText()) - Integer.parseInt(this.txtCantidad.getText());
                        int total = alma - ingre;

                        if (total < 0) {
                            ErrorAlert er = new ErrorAlert(new JFrame(), true);
                            er.titulo.setText("OOPS...");
                            er.msj.setText("VERIFICA EL ALMACEN");
                            er.msj1.setText("");
                            er.setVisible(true);
                        } else {
                            crearDetalle();
                            this.txtCantidad.setText("");
                            this.buscar.setText("");
                            Opciones.listar(this.buscar.getText());
                            this.buscar.requestFocusInWindow();
                            //                            producto.Sentencias s = new producto.Sentencias();
                            //                            int fila1 = this.tabla.getSelectedRow();
                            //                            s.setCantidad(total);
                            //                            s.setId(Integer.parseInt(this.tabla.getValueAt(fila1, 0).toString()));
                            //
                            //                            int opcion = producto.Opciones.actualizarStock(s);
                            //                            if (opcion != 0) {
                            //                                String fila2 = this.tabla.getValueAt(fila1, 0).toString();
                            //                                Opciones.listar("");
                            //                                seleccionaFila(fila2);
                            //                                ventas.Opciones.enviar(Integer.parseInt(this.tabla.getValueAt(fila, 0).toString()), Integer.parseInt(this.txtCantidad.getText()));
                            //                                this.txtCantidad.setText("");
                            //                                //this.dispose();
                            //                            }
                        }
                    }
                }
            }
        }


    }//GEN-LAST:event_txtCantidadActionPerformed


    private void tablaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tablaKeyPressed

    }//GEN-LAST:event_tablaKeyPressed

    private void buscarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_buscarKeyPressed

    }//GEN-LAST:event_buscarKeyPressed

    private void buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarActionPerformed

    }//GEN-LAST:event_buscarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Productos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Productos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Productos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Productos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Productos dialog = new Productos(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private principal.MaterialButtonCircle btnMenos;
    public static app.bolivia.swing.JCTextField buscar;
    private javax.swing.JLabel cantidadAlmacen;
    private principal.MaterialButton cerrar;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JTable tabla;
    private app.bolivia.swing.JCTextField txtCantidad;
    // End of variables declaration//GEN-END:variables
}
